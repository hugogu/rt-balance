name: Build and Test

on:
  push:
    branches:
      - master
      - cicd
  pull_request:
    branches:
      - master

jobs:
  build:
    runs-on: ubuntu-latest
    container: ubuntu
    permissions:
      checks: write
      pull-requests: write
    services:
      postgres:
        image: postgres:17
        env:
          POSTGRES_USER: postgres
          POSTGRES_PASSWORD: postgres
          POSTGRES_DB: account
        ports:
          - 5432:5432
        options: --health-cmd pg_isready 
          --health-interval 10s 
          --health-timeout 5s 
          --health-retries 5

      redis:
        image: redis:7
        ports:
          - 6379:6379

    steps:
      - name: Checkout code
        uses: actions/checkout@v3

      - name: Set up JDK 17
        uses: actions/setup-java@v3
        with:
          java-version: '17'
          distribution: 'temurin'

      - name: Cache Gradle packages
        uses: actions/cache@v3
        with:
          path: |
            ~/.gradle/caches
            ~/.gradle/wrapper
          key: ${{ runner.os }}-gradle-${{ hashFiles('**/*.gradle*', '**/gradle-wrapper.properties') }}
          restore-keys: |
            ${{ runner.os }}-gradle-

      - name: Grant execute permission for gradlew
        run: chmod +x gradlew

      - name: Install PostgreSQL client
        run: apt-get update && apt-get install -y --no-install-recommends postgresql-client

      - name: Create transaction database
        run: |
          PGPASSWORD=postgres psql -h postgres -U postgres -c "CREATE DATABASE transaction;"

      - name: Build with Gradle
        run: ./gradlew build
        env:
          DB_HOST: postgres
          SPRING_DATA_REDIS_HOST: redis

      - name: Run tests
        run: ./gradlew test jacocoTestReport testAggregateTestReport
      - name: Publish Test Results
        uses: EnricoMi/publish-unit-test-result-action@v2
        if: always()
        with:
          files: |
            app-account-service/build/test-results/**/*.xml
            app-transaction-service/build/test-results/**/*.xml
      - name: Add coverage to PR
        # https://github.com/marketplace/actions/jacoco-report
        id: jacoco
        uses: madrapps/jacoco-report@v1.7.1
        with:
          paths: |
            ${{ github.workspace }}/**/build/reports/jacoco/test/jacocoTestReport.xml
          token: ${{ secrets.GITHUB_TOKEN }}
          min-coverage-overall: 40
          min-coverage-changed-files: 60
          debug-mode: false
      - name: JaCoCo Code Coverage Report
        id: jacoco_reporter
        uses: PavanMudigonda/jacoco-reporter@v5.1-beta
        with:
          coverage_results_path: ${{ github.workspace }}/account-service/build/report/jacoco/test/jacocoTestReport.xml
          coverage_report_name: Coverage
          coverage_report_title: JaCoCo Report
          github_token: ${{ secrets.GITHUB_TOKEN }}
          skip_check_run: false
          minimum_coverage: 70
          fail_below_threshold: false
          publish_only_summary: false
      - name: Add Jacocoo report to workflow run summary
        run: |
          echo "| Outcome | Value |" >> $GITHUB_STEP_SUMMARY
          echo "| --- | --- |" >> $GITHUB_STEP_SUMMARY
          echo "| Code Coverage % | ${{ steps.jacoco_reporter.outputs.coverage_percentage }} |" >> $GITHUB_STEP_SUMMARY
          echo "| :heavy_check_mark: Number of Lines Covered | ${{ steps.jacoco_reporter.outputs.covered_lines }} |" >> $GITHUB_STEP_SUMMARY
          echo "| :x: Number of Lines Missed | ${{ steps.jacoco_reporter.outputs.missed_lines }} |" >> $GITHUB_STEP_SUMMARY
          echo "| Total Number of Lines | ${{ steps.jacoco_reporter.outputs.total_lines }} |" >> $GITHUB_STEP_SUMMARY
      - name: Publish Coverager Workflow Build Summary
        run: echo "${{ steps.jacoco_reporter.outputs.coverageSummary }}" >> $GITHUB_STEP_SUMMARY
      - name: Archive code coverage results
        uses: actions/upload-artifact@v4
        with:
          name: code-coverage-report
          retention-days: 5
          path: |
            account-service/build/jacocoHtml
            transaction-service/build/jacocoHtml
            */coverage-results.md
