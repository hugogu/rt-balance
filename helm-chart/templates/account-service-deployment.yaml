apiVersion: apps/v1
kind: Deployment
metadata:
  name: account-service
spec:
  replicas: {{ .Values.accountService.replicas }}
  selector:
    matchLabels:
      app: account-service
  template:
    metadata:
      labels:
        app: account-service
    spec:
      affinity:
        podAntiAffinity:
          preferredDuringSchedulingIgnoredDuringExecution:
            - weight: 100
              podAffinityTerm:
                labelSelector:
                  matchExpressions:
                    - key: app
                      operator: In
                      values:
                        - account-service
                topologyKey: "kubernetes.io/hostname"
      containers:
        - name: account-service
          image: {{ .Values.accountService.image }}
          ports:
            - containerPort: 8080
            - containerPort: 9010
          # QoS should be set to Guaranteed to ensure that the pod has the resources it requests.
          # And it is also a performance benchmark baseline.
          resources:
            requests:
              memory: "2048Mi"
              cpu: "1024m"
            limits:
              memory: "2048Mi"
              cpu: "1024m"
          env:
            - name: DB_HOST
              value: {{ .Values.accountService.db.host }}
            - name: SPRING_DATA_REDIS_HOST
              value: {{ .Values.accountService.redis.host }}
            - name: SPRING_DATASOURCE_USERNAME
              value: {{ .Values.accountService.db.user }}
            - name: SPRING_DATASOURCE_PASSWORD
              value: {{ .Values.accountService.db.password }}
            - name: SPRING_KAFKA_BOOTSTRAP_SERVERS
              value: {{ .Values.accountService.kafka.bootstrapServers }}
            - name: SERVER_TOMCAT_THREADS_MAX
              value: "{{ .Values.accountService.tomcat.thread }}"
            - name: BPL_JVM_THREAD_COUNT
              value: "{{ .Values.accountService.jvm.thread }}"
            # Allow remote debugging & profiling from local.
            - name: JAVA_OPTS
              value: "-Dcom.sun.management.jmxremote \
                      -Dcom.sun.management.jmxremote.authenticate=false \
                      -Dcom.sun.management.jmxremote.ssl=false \
                      -Dcom.sun.management.jmxremote.local.only=false \
                      -Dcom.sun.management.jmxremote.port=9010 \
                      -Dcom.sun.management.jmxremote.rmi.port=9010 \
                      -Djava.rmi.server.hostname=127.0.0.1"
          livenessProbe: {{ toYaml .Values.probes.liveness | nindent 12 }}
          readinessProbe: {{ toYaml .Values.probes.readiness | nindent 12 }}
---
apiVersion: v1
kind: Service
metadata:
  name: account-service
spec:
  selector:
    app: account-service
  ports:
    - name: service-port
      protocol: TCP
      port: 8080
      targetPort: 8080
    - name: debug-port
      protocol: TCP
      port: 9010
      targetPort: 9010

{{- if .Values.accountService.hpa.enabled }}
---
apiVersion: autoscaling/v2
kind: HorizontalPodAutoscaler
metadata:
  name: account-hpa
spec:
  scaleTargetRef:
    apiVersion: apps/v1
    kind: Deployment
    name: account-service
  minReplicas: {{ .Values.accountService.hpa.minReplicas }}
  maxReplicas: {{ .Values.accountService.hpa.maxReplicas }}
  metrics:
    - type: Resource
      resource:
        name: cpu
        target:
          type: Utilization
          averageUtilization: {{ .Values.accountService.hpa.targetCPUUtilizationPercentage }}
{{- end }}

